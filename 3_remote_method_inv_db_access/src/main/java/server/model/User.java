package server.model;

import common.UserDTO;
import org.hibernate.annotations.NaturalId;

import javax.persistence.*;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This defines the user for the db
 */
@Entity
public class User implements Serializable, UserDTO {

    /**
     * Defines id, which is autogenerated
     */
    @Id
    @GeneratedValue
    private int id;

    /**
     * defines the username as a natural id
     */
    @NaturalId
    private String username;

    /**
     * the password
     */
    private String password;

    /**
     * user-end of the relation to file user-column
     * One user can own many files
     */
    @OneToMany(mappedBy = "owner", cascade = CascadeType.ALL)
    private List<File> files = new ArrayList<>();

    /**
     * The date the user was created
     */
    private Date createdAt;

    /**
     * the date the user was updated at
     */
    private Date updatedAt;

    /**
     * empty constructor
     */
    public User() {
    }

    /**
     * Constructor for user object
     * @param username  the name of the user
     * @param password  the password
     */
    public User ( String username, String password ) {
        this.username = username;
        this.password = password;
    }

    /**
     * On creation we define created and updated at
     */
    @PrePersist
    private void onCreate() {
        this.createdAt = new Date();
        this.updatedAt = new Date();
    }

    /**
     * If we update the user for som reason, set update time
     */
    @PreUpdate
    private void onUpdate() {
        this.updatedAt = new Date();
    }

    /*
     * Getters for all fields are found below
     */

    public int getId() {
        return id;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public List<File> getFiles() {
        return files;
    }

    public Date getCreatedAt() {
        return createdAt;
    }

    public Date getUpdatedAt() {
        return updatedAt;
    }
}
